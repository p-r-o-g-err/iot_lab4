import paho.mqtt.client as mqtt
import sqlite3
import time
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))) # –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ config
from config import *
from utils import send_telegram_message

class TemperatureController:
    def __init__(self):
        self.client = mqtt.Client("temperature_controller")
        self.client.username_pw_set(MQTT_USERNAME, MQTT_PASSWORD)
        self.client.connect(MQTT_BROKER, MQTT_PORT)
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Ç–æ–ø–∏–∫ —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–∞—Ç—á–∏–∫–∞
        self.client.on_message = self.on_message
        self.client.subscribe(MQTT_TOPIC_SENSOR)
        
        self.current_temperature = None
        self.client.loop_start()
    
    def on_message(self, client, userdata, msg):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            if msg.topic == MQTT_TOPIC_SENSOR:
                # –ü–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –¥–∞—Ç—á–∏–∫–∞
                self.current_temperature = float(msg.payload.decode())
                self.check_temperature()
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    def check_temperature(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        if self.current_temperature is None:
            return
             
        if self.current_temperature < -15:
            message = f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {self.current_temperature}¬∞C: –•–æ–ª–æ–¥–Ω–æ! ‚ùÑÔ∏è"
        elif -15 <= self.current_temperature <= 0:
            message = f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {self.current_temperature}¬∞C: –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ. üå¨Ô∏è"
        elif 0 < self.current_temperature < 15:
            message = f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {self.current_temperature}¬∞C: –°–∫–æ—Ä–æ –ª–µ—Ç–æ! üå∏"
        else:
            message = f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {self.current_temperature}¬∞C: –ñ–∞—Ä–∫–æ! ‚òÄÔ∏è"

        print(message)
        send_telegram_message(message)

    def stop(self):
        self.client.loop_stop()
        self.client.disconnect()

if __name__ == "__main__":
    controller = TemperatureController()
    try:
        print("–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –∑–∞–ø—É—â–µ–Ω")
        while True:
            time.sleep(2)
    except KeyboardInterrupt:
        print("\n–ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        controller.stop()